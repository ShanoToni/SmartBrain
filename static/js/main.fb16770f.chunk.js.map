{"version":3,"sources":["Components/Logo/brain.png","Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/ImageForm/ImageForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","Components/SignIn/SignIn.js","Components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","alt","ImageForm","onInputChange","onSubmit","type","onChange","name","id","Rank","entries","imageUrl","box","top","topRow","right","rightCol","bottom","bottomCol","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","bind","class","this","required","href","React","Component","Register","onNameChange","onSubmitRegister","particlesOptions","particles","number","density","enable","value_area","line_linked","shadow","color","blur","initState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","error","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb16770f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.7cfc8fbe.png\";","import React from \"react\";\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) =>{\r\n        if(isSignedIn)\r\n        {\r\n            return (\r\n            <nav style={{display: \"flex\" , justifyContent: \"flex-end\"}}>\r\n                <p onClick={() => onRouteChange(\"signout\")} className=\"f3 link dim black underline pa3 pointer\">Sign Out!</p>\r\n            </nav>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <nav style={{display: \"flex\" , justifyContent: \"flex-end\"}}>\r\n                        <p onClick={() => onRouteChange(\"signin\")} className=\"f3 link dim black underline pa3 pointer\">Sign In!</p>\r\n                        <p onClick={() => onRouteChange(\"register\")} className=\"f3 link dim black underline pa3 pointer\"> Register!</p>\r\n                    </nav>\r\n                    <nav style={{display: \"flex\" , justifyContent: \"flex-end\"}}>\r\n                    </nav>\r\n                </div>\r\n            )\r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport Tilt from 'react-tilt'\r\nimport \"./Logo.css\"\r\nimport brain from \"./brain.png\"\r\n\r\nconst Logo = () =>{\r\n    return (\r\n        <div className=\"ma4 mt0\">\r\n        <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 45 }} style={{ height: 250, width: 250 }} >\r\n           <div className=\"Tilt-inner pa3\"> <img  src={brain} alt=\"\"/> </div>\r\n        </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport \"./ImageForm.css\"\r\n\r\nconst ImageForm = ({onInputChange, onSubmit}) =>{\r\n    return (\r\n        <div>\r\n            <p className=\"f3\">\r\n                {\"This magic brain will detect faces in your pictures. Give it a try!\"}\r\n            </p>\r\n            <div className=\"form center pa4 br3  mw8 shadow-5\">\r\n                <input className=\"f4 pa2 w-70 center\" type=\"text\" onChange={onInputChange} name=\"\" id=\"\"/>\r\n                <button onClick={onSubmit} className = \"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\">Detect</button>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageForm;","import React from \"react\";\r\n\r\n\r\nconst Rank = ({name, entries}) =>{\r\n    return (\r\n        <div>\r\n            <div className=\"white f3\">\r\n                {`${name} your entry count is:` }\r\n            </div>\r\n            <div className=\"white f1\">\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from \"react\";\r\nimport \"./FaceRecognition.css\"\r\nconst ImageForm = ({imageUrl, box}) =>{\r\n    return (\r\n        <div className=\"center ma \">\r\n            <div id=\"pain\" className=\" absolute  mw6 mt2\">\r\n                <img id=\"inputImage\" src={imageUrl} alt=\"\" width=\"500px\" height=\"auto\"/>\r\n                <div className=\"bounding-box\" style={{top:box.topRow, right:box.rightCol, bottom: box.bottomCol, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageForm;","import React from \"react\";\r\n\r\n\r\nclass SignIn extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            signInEmail:\"\",\r\n            signInPassword:\"\"\r\n        }\r\n\r\n        this.onSubmitSignIn = this.onSubmitSignIn.bind(this);\r\n    }\r\n    onEmailChange = (event) =>{\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) =>{\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () =>{\r\n        fetch(\"https://protected-fortress-52024.herokuapp.com/signin\",{\r\n            method : \"post\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n          if(user.id){\r\n            this.props.loadUser(user);\r\n            this.props.onRouteChange('home');\r\n          }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-100-m w-100-l mw6 center shadow-5\">\r\n                <main className=\"pa4 black-80\">\r\n                <div className=\"measure center\">\r\n                    <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" name=\"email-address\">Email</label>\r\n                        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" required/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" name=\"password\">Password</label>\r\n                        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" required/>\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                    onClick={this.onSubmitSignIn} \r\n                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                    <a  onClick={() => this.props.onRouteChange(\"register\")} href=\"#0\" class=\"f6 link dim black db pointer\">Sign up</a>\r\n                    </div>\r\n                </div>\r\n                </main>\r\n            </article>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from \"react\";\r\n\r\n\r\nclass Register extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            name:\"\"\r\n        }\r\n    }\r\n    onEmailChange = (event) =>{\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) =>{\r\n        this.setState({password: event.target.value})\r\n    }\r\n    onNameChange = (event) =>{\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onSubmitRegister =(event)=>{\r\n        fetch(\"https://protected-fortress-52024.herokuapp.com/register\", {\r\n            method: \"post\",\r\n            headers: {\"Content-Type\" :\"application/json\"},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password : this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user =>{\r\n            if(user.id){\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange(\"home\");\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-100-m w-100-l mw6 center shadow-5\">\r\n                <main className=\"pa4 black-80\">\r\n                <div className=\"measure center\">\r\n                    <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" name=\"name\">Name</label>\r\n                        <input\r\n                            onChange={this.onNameChange}\r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\" name=\"name\"  id=\"name\"/>\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" name=\"email-address\">Email</label>\r\n                        <input \r\n                        onChange={this.onEmailChange}\r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                         type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" name=\"password\">Password</label>\r\n                        <input \r\n                        onChange={this.onPasswordChange}\r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                        type=\"password\" name=\"password\"  id=\"password\"/>\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                        onClick={this.onSubmitRegister} \r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                        type=\"submit\" value=\"Sign Up!\"/>\r\n                    </div>\r\n                </div>\r\n                </main>\r\n            </article>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\nimport Navigation from \"./Components/Navigation/Navigation\"\nimport Logo from \"./Components/Logo/Logo\"\nimport ImageForm from \"./Components/ImageForm/ImageForm\"\nimport Rank from \"./Components/Rank/Rank\"\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\"\nimport Particles from 'react-particles-js';\n\nimport SignIn from \"./Components/SignIn/SignIn\"\nimport Register from \"./Components/Register/Register\"\nimport './App.css';\n\n\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      },\n      line_linked: {\n        shadow: {\n          enable: true,\n          color: \"#3CA9D1\",\n          blur: 5\n        }\n      }\n    }\n  },\n \n};\nconst initState = {\n  input :\"\",\n  imageUrl:\"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n}\n\nclass App extends React.Component{\n  constructor() {\n    super();\n    this.state = initState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n\n    \n  }\n  onInputChange = (event) => {\n   this.setState({input :event.target.value});\n  }\n\n  calculateFaceLocation = (data)=>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    \n    return {\n      leftCol : clarifaiFace.left_col * width,\n      topRow : clarifaiFace.top_row * height,\n      rightCol : width - (clarifaiFace.right_col * width),\n      bottomCol : height - (clarifaiFace.bottom_row * height)\n    }\n\n  }\n\n  displayFaceBox = (box) =>{\n    this.setState({box: box});\n  }\n\n  onSubmit = () =>{\n    this.setState({imageUrl:this.state.input})\n    fetch(\"https://protected-fortress-52024.herokuapp.com/image\", {\n          method: \"post\",\n          headers: {\"Content-Type\" :\"application/json\"},\n          body: JSON.stringify({\n              input: this.state.input\n          })\n        })\n        .then(response => response.json())\n    .then((response) =>{\n      if(response) {\n        fetch(\"https://protected-fortress-52024.herokuapp.com/image\", {\n          method: \"put\",\n          headers: {\"Content-Type\" :\"application/json\"},\n          body: JSON.stringify({\n              id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries : count}))\n        })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n\n    .catch(error => console.log(error));\n  \n  }\n\n  onRouteChange = (route) => {\n    if(route === \"signout\") {\n      this.setState(initState);\n      console.log(this.state);\n    } else if (route === \"home\"){\n      this.setState({isSignedIn:true});\n    }\n    this.setState({route : route});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn}/>\n        { this.state.route === \"home\" \n        ? <div>\n            <Logo/>\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageForm \n              onInputChange={this.onInputChange}\n              onSubmit={this.onSubmit\n            } />\n            <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n          </div>\n        : this.state.route ===\"register\"\n         ? <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n         : <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        }\n        \n        \n      </div>\n    );\n  }\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}